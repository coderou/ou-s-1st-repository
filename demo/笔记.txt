1,传参是地址值的赋值
2,js调用函数时是传递的值还是引用?
	只有值传递,没有引用传递这个说法
3,对象的key一定是字符串,不可能是其他类型
4,{}==>字符串为[object object]
5, .操作符:叫做成员访问,访问一个对象的属性或方法,但是.操作符后跟的都是字符串
6,[]操作符对应对象来说,也是访问或者设置一个对象的属性或方法,中括号中可以书写变量(最终会吧变量解析为字符串),也可以书写字符串,但是必须加引号
7,[]操作符是万能的,里面可以书写变量或者字符串,但是.操作符只能是写字符串(不用加引号)
8,[]使用场景==>属性是变量表示的,key命名不规范  需要添加引号

9,可以封装一个自己的js代码工具
10,call\apply()做了2件事情,1,改变this指向,2,调用函数



1.map是foreach的高级版,不但有所有foreach的功能,还有返回值,但是如果不需要返回值就不用map就可以

二进制和八进制和16进制的数据转换,算法数据设计,数据分析等等很有用

()()(一定要学算法)(((一定要学算法,看http协议,看算法,看数据结构,二叉树三叉树,浏览器内核,编辑器,操作系统,计算机组成原理)))

2.css事件,很推荐,lineheight和verticalalign等等

3.天天做前端工程师是会被辞退的,所以要学会上升自己的技术空间技术面和经验(后端)

4.echarts 图标2020.12.17.9:45讲了很多工作经验

5.sin cos 
6.质数水仙花数,等等
7.矩阵,大学线性代数.linux
8.可以找李沛华问那本书值得买
9.js忍者秘籍 去年07
10.现在只需要大犀牛(js权威指南)和js高级程序设计4版
11.一年4-5个5-6个项目(程序元,面试考试的就是理论)
12.重点==>  .   和  []操作符
13.腾讯外包面试很简单很基础???
14.回答问题之前先问自己,什么是?作用是什么?缺点?优点?
15.this和函数调用相关,一定要知道函数调用方式
16.foeach也是回调函数
17.IIFE就是为了构成一个局部作用域
18.css sprites的理解==>css精灵图\雪碧图
19.reset.css==>样式重置
20.全局变量要尽量避免使用,因为不知道谁修改的
21.let声明的变量时块级作用域,只要是一个大括号就是一个作用域
22.IIFE作用(特别)==>书写模块 module.js(写出模块然后组装)
23.common js   Es6 模块化开发
24.局部作用于=(衍生出)=>模块化开发
25.+-!~ function(){}()也是匿名函数自调用
26.

;
~ function (){}()

27.什么都不写写 ;  就叫空语句
28.隐式丢失
29.计时器this一定一定一定指向window,除非call,只是将地址放在了计时器函数位置
30.第一个并没有调用fn1,只是改变了this执行,[].foreach.call.....只是想拿foreach这个东西
31.通过fn1拿到了call.call2改变了call1的指向为fn2,然后call1执行,
32.手写call(明天)
33.先执行call2改变了this才能执行call1

1 如果只是调用内部函数,闭包只存在了一会儿,如果是返回内部函数,内部函数的地址值被外部拿到了,那么就不会销毁内部函数,外部函数也不会被销毁,这才是闭包常用方法
2 只要构成闭包条件,进到外部函数,闭包就产生了
3 包含了被引用变量的那个closure对象叫闭包
4 变量引用没有断,重复调用内部,改变的还是'那个闭包'的局部变量
5 如果又调用外部,则新开辟一个闭包
6 闭包不是刻意而为的,是自然而然写出来的
7 可用空间变少==>泄露,溢出==>不叫泄露
8 对象中的方法中的this要看这么调用这个方法的,如果是对象.方法,this指向对象

9 对象分2类,1是普通的保存数据的对象,2是现实事物中的抽象

10 弹幕每一个弹幕都有一份随机生成 文字大小,位置,颜色,等等,并且 还要销毁
11 每一条弹幕都有共同的随机生成颜色,速度,字体,可以共享

12 在无尽的学习中,我深刻感受到,人类是有极限的

13 14:20面相对象写法

14 弹幕等等,一次性出现几千次的,肯定是用面相对象做的

15 面相对象:代码界的精髓

16 JS高级还有个名字(JS面相对象)

17 (学习途径)视频论坛博客
18 面相对象3大特征,封装\继承\多态(JAVA是典型的面相对象语言)

19 JS是弱类型,解释形,基于原型的脚本语言



1 如不加toLowerCase,会因为没有首字母大写问题很难判断哪里错了
  2 prototype是一个指针,指向原型对象
  3 有个插件叫prototype,重写了很多东西
  4 forEach'里面的函数的'this指向window
  5 continue不能退出forEach变量的当前次循环,因为退出的是函数
  6 使用return可以退出forEach的当前函数,以替代continue的退出当前次执行的功能
  7 兼职打码平台
  8 机器人实验室
  9 南京苏宁生鲜部项目总监
  10 隐式原型:ES5之前是不能修改的,所以叫隐式原型
  11 两链一闭,原型链,作用域链,闭包
  12 说出a.b的执行过程(先作用域链找a,再原型链找b)(.是成员访问)
  13 
  14  
    只看不写,白学
    只学不总结,白学
    只总结不复习,白学
    复习不针对面试,白学
  15 函数先提升,变量后提升, 但是变量没赋值之前不能覆盖函数
  16 A in  B  A是不是B对象上的一个属性
  17 不管会不会进if判断,只要有var b 就会提升




