{"version":3,"sources":["utils/fixed.js","config/routers.js","App.js","index.js"],"names":["adapter","fontSize","document","documentElement","clientWidth","style","window","onresize","Home","React","lazy","routers","path","component","exact","app","fallback","color","map","i","Component","ReactDom","render","getElementById"],"mappings":"mGAWA,SAASA,IACP,IAAMC,EAAWC,SAASC,gBAAgBC,YAAc,GACxDF,SAASC,gBAAgBE,MAAMJ,SAAWA,EAAW,KAEvDD,IACAM,OAAOC,SAAWP,G,2HCPZQ,EAAOC,IAAMC,MAAK,kBAAM,kCA2CfC,EA/BD,CACZ,CACEC,KAAM,IACNC,UAAWL,EACXM,OAAO,GAET,CACEF,KAAM,QACNC,UAAWL,GAEb,CACEI,KAAM,SACNC,UAvBUJ,IAAMC,MAAK,kBAAM,gEAyB7B,CACEE,KAAM,kBACNC,UA1BkBJ,IAAMC,MAAK,kBAC/B,6EA2BA,CACEE,KAAM,iBACNC,UA3BiBJ,IAAMC,MAAK,kBAAM,6EA6BpC,CACEE,KAAM,qBACNC,UA9BqBJ,IAAMC,MAAK,kBAClC,8EA+BA,CACEE,KAAM,WACNC,UA/BWJ,IAAMC,MAAK,kBAAM,gE,eCbXK,E,4JACnB,WACE,OACE,cAAC,WAAD,CACEC,SAAU,qBAAKX,MAAO,CAAEJ,SAAU,GAAIgB,MAAO,OAAnC,wBADZ,SAGE,cAAC,IAAD,UACGN,EAAQO,KAAI,SAACC,GACZ,OACE,cAAC,IAAD,CAEEP,KAAMO,EAAEP,KACRC,UAAWM,EAAEN,UACbC,MAAOK,EAAEL,OAHJK,EAAEP,iB,GAVUQ,a,MCEjCC,IAASC,OAAO,cAAC,EAAD,IAASpB,SAASqB,eAAe,W","file":"static/js/main.ae001464.chunk.js","sourcesContent":["// 实现移动端适配的代码\r\n\r\n// 方式1\r\n/* function adapter() {\r\n  const fontSize = (document.documentElement.clientWidth * 100) / 375;\r\n  document.documentElement.style.fontSize = fontSize + \"px\";\r\n}\r\nadapter();\r\nwindow.onresize = adapter; */\r\n\r\n//  方式2\r\nfunction adapter() {\r\n  const fontSize = document.documentElement.clientWidth / 10;\r\n  document.documentElement.style.fontSize = fontSize + \"px\";\r\n}\r\nadapter();\r\nwindow.onresize = adapter;\r\n","import React from 'react'\r\n// 由于项目中可能有多个页面,手动定义Route组件就不是很方便了,所以定义一个数组,根据数组动态渲染Route组件\r\n// import Home from '../pages/Home'\r\n// import Login from '../pages/Login'\r\n// import RegisterPhone from '../pages/Register/Registerphone'\r\n// import RegisterCode from '../pages/Register/RegisterCode'\r\n// import RegisterPassword from '../pages/Register/RegisterPassword'\r\n// import County from '../pages/County'\r\n\r\nconst Home = React.lazy(() => import('../pages/Home'))\r\nconst Login = React.lazy(() => import('../pages/Login'))\r\nconst RegisterPhone = React.lazy(() =>\r\n  import('../pages/Register/Registerphone')\r\n)\r\nconst RegisterCode = React.lazy(() => import('../pages/Register/RegisterCode'))\r\nconst RegisterPassword = React.lazy(() =>\r\n  import('../pages/Register/RegisterPassword')\r\n)\r\nconst County = React.lazy(() => import('../pages/County'))\r\n\r\n// 这个数组最终要渲染出来一个个的Route组件,所以这个数组又被人为的称为路由表\r\nlet routers = [\r\n  {\r\n    path: '/', //除了默认路由写在最上面,其他的随便顺序\r\n    component: Home,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/home',\r\n    component: Home,\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: Login,\r\n  },\r\n  {\r\n    path: '/register/phone',\r\n    component: RegisterPhone,\r\n  },\r\n  {\r\n    path: '/register/code',\r\n    component: RegisterCode,\r\n  },\r\n  {\r\n    path: '/register/password',\r\n    component: RegisterPassword,\r\n  },\r\n  {\r\n    path: '/country',\r\n    component: County,\r\n  },\r\n]\r\nexport default routers\r\n","import React, { Component, Suspense } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport routers from './config/routers'\r\nimport './App.css'\r\n\r\nexport default class app extends Component {\r\n  render() {\r\n    return (\r\n      <Suspense\r\n        fallback={<div style={{ fontSize: 50, color: 'red' }}>loading...</div>}\r\n      >\r\n        <Router>\r\n          {routers.map((i) => {\r\n            return (\r\n              <Route\r\n                key={i.path}\r\n                path={i.path}\r\n                component={i.component}\r\n                exact={i.exact}\r\n              ></Route>\r\n            )\r\n          })}\r\n        </Router>\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport App from \"./App\"\r\n// 不导入任何内容,只是为了让对应模块中的代码执行一次\r\n\r\nimport \"./utils/fixed\"\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}